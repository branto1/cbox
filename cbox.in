#!/bin/bash

set -e

[ "$(whoami)" != "root" ] && {
	echo "Need root baby"
	exit 1
}

# cbox data dir
[ -z "$cboxdatadir" ] && cboxhooksdir="DATADIR"

# cbox hooks dir
[ -z "$cboxhooksdir" ] && cboxhooksdir="$cboxdatadir/hooks"

# basic logging
[ -z "$cboxlogdir" ] && cboxlogdir="LOGDIR"
cboxlogfile=$cboxlogdir/cbox-$(date +%F_%T).log

function print_usage() {
	echo "$(basename $0) usage:"
	echo ""
}

function is_integer() {
    [ "$1" -eq "$1" ] > /dev/null 2>&1
    return $?
}

# parse command line options
#
# c -> cluster name (cboxclustername)
# h -> help
# n -> number of nodes (cboxnumnodes)
# t -> type (cboxclustertype)
# v -> verbose

# clear envvars (when adding, make sure to export them below)
cboxclustername=""
cboxnumnodes=""
cboxclustertype=""
cboxverbose=""

while getopts ":c:hn:t:v" optflag; do
	case "$optflag" in
	c)
		cboxclustername="$OPTARG"
		;;
	n)
		cboxnumnodes="$OPTARG"
		! is_integer $numnodes && {
			echo "ERROR: number of nodes needs to be an integer (min 2, max 16)"
			exit 1
		}
		if [ "$cboxnumnodes" -lt "2" ] || \
		   [ "$cboxnumnodes" -gt "16" ]; then
			echo "ERROR: invalid number of nodes specified (min 2, max 16)"
			exit 1
		fi
		;;
	t)
		cboxclustertype="$OPTARG"
		if [ "$cboxclustertype" != "cman" ] && \
		   [ "$cboxclustertype" != "pacemaker" ]; then
			echo "ERROR: cluster type has to be cman or pacemaker"
			exit 1
		fi
		;;
	v)
		cboxverbose="yes"
		;;
	h)
		print_usage
		exit 0
		;;
	\?|:)
		print_usage
		exit 1
		;;
	esac
done

[ ! -d "$cboxdatadir" ] && {
	echo "ERROR: no valid data directory specified: $cboxdatadir"
	exit 1
}

[ ! -d "$cboxhooksdir" ] && {
	echo "ERROR: no valid hooks directory specified: $cboxhooksdir"
	exit 1
}

[ ! -d "$cboxlogdir" ] && {
	echo "ERROR: no valid log directory specified: $cboxlogdir"
	exit 1
}

touch $cboxlogfile || {
	echo "ERROR: unable to write to logfile: $cboxlogfile"
	exit 1
}

[ -z "$cboxclustername" ] && {
	echo "ERROR: please specify the clustername"
	print_usage
	exit 1
}

[ -z "$cboxnumnodes" ] && {
	echo "INFO: no number of nodes specified, default to 2"
	cboxnumnodes=2
}

[ -z "$cboxclustertype" ] && {
	echo "INFO: no cluster type defined, default to cman"
	cboxclustertype=cman
}

export cboxdatadir
export cboxhooksdir
export cboxclustername
export cboxnumnodes
export cboxclustertype
export cboxverbose
export cboxlogdir
export cboxlogfile

for i in $(LC_ALL=C; echo $cboxhooksdir/*[^~,]); do
	[ -d $i ] && continue
	# skip know scripts
	[ "${i%.cfsaved}" != "${i}" ] && continue
	[ "${i%.rpmsave}" != "${i}" ] && continue
        [ "${i%.rpmorig}" != "${i}" ] && continue
        [ "${i%.rpmnew}" != "${i}" ] && continue
        [ "${i%.swp}" != "${i}" ] && continue
	[ "${i%,v}" != "${i}" ] && continue
	[ "${i%.dpkg-old}" != "${i}" ] && continue
	[ "${i%.dpkg-dist}" != "${i}" ] && continue
	[ "${i%.dpkg-new}" != "${i}" ] && continue

	if [ -x $i ]; then
		echo "starting $(basename $i)" >> $cboxlogfile
		[ -n "$cboxverbose" ] && $i >> $cboxlogfile
		[ -z "$cboxverbose" ] && $i > /dev/null 2>&1
		echo "finished $(basename $i)" >> $cboxlogfile
	fi
done

exit 0
